assert TABLE[-190.872 / Ygritte][destroy(ROWS,( -260.77 ))] : "Breaches found"
var dog = foo(-Ygritte,1,TABLE[-46][-0.23])
def TABLE[TABLE[( y )][Stark]][k] {
	if(COLS){
	if(x){

} else {
	Hodor += ( ( 0.23 ) )
}
}
}
assert zed : "No breaches found!"
def rule(){
	Sansa -= protect() + foo(-0.81,-Stark);
	x /= y
}
def TABLE[( ( TABLE[33][rule()] ) ) / -29][k] {
	( -COLS )
}
var Stark = ( COLS )
def TABLE[-0.82][j] {
	COLS;
	Ygritte /= dog
}
def bar(dog){
	if(dog){
	if(TABLE[Sansa / -1][bar(Sansa) / x - foo(zed,foo(protect(COLS,-TABLE[y][( -( ( -1 ) ) ) * COLS * -0.68 + mislead(( ROWS / ROWS - ( y ) ),1,foo(( zed )) / COLS / ( destroy(-bar(destroy(-TABLE[-1][( COLS + bar(Stark) )]))) ))],bar(protect(1),--ROWS - Arya))) * ( TABLE[( -54 )][180.1168] )) - TABLE[0.08][Jon]]){
	if(COLS){
	TABLE[---950.3 + -( COLS ) + Hodor][protect(bar(--ROWS),-76)]
};
	Sansa /= -0.07
};
	if(-dog * x + -29){
	destroy(-zed * 1 - ( ( ( protect(ROWS) ) ) ),-0.07);
	Sansa /= -1000.58
} else {
	rule(( foo(-( 97 ) * -ROWS) ) + COLS,-76)
};
	( ( Ygritte ) + -dog + foo() )
} else {
	betray();
	Sansa -= zed
};
	if(Hodor){
	if(-( 0.7 )){
	if(bar(-( -22 ))){

};
	if(44){
	if(ROWS){
	if(0.97 / -10 / ROWS){

} else {
	if(( COLS )){
	Hodor /= ( zed );
	1 - rule(mislead(-mislead(zed),ROWS,destroy(COLS)))
} else {
	dog *= -TABLE[0.59][Hodor - ( COLS * Hodor ) / ( -26 )];
	if(Sansa / 66){
	( ( destroy(COLS,-0) ) ) + Ygritte
} else {
	dog
}
};
	Stark += ( ( TABLE[ROWS][protect(ROWS,-1)] ) )
}
};
	if(-Ygritte){

}
}
} else {
	--( foo() );
	-0.84
};
	if(TABLE[( betray(( TABLE[--betray(ROWS,zed,Sansa)][COLS] ),COLS / mislead(dog)) - ROWS )][Arya]){
	9 + dog
}
}
}
var Ygritte = x
var y = ROWS / 1 * COLS
var Sansa = Arya
var Sansa = zed
def bar(x){
	x *= ROWS;
	Arya += ROWS
}
var y = -820.02 + COLS * Stark - -Arya
def destroy(x,zed,Stark){
	if(TABLE[Sansa][1]){
	ROWS
} else {
	Hodor *= ( -( ( ( --( ( --0.84 ) ) ) ) ) );
	if(63 + ROWS * y){
	Arya *= rule(-( Sansa ) * foo(( -900.3592 ) + -TABLE[( zed )][dog],-Ygritte,rule(rule(( COLS ),mislead() + bar(dog)),Arya)));
	zed
} else {
	if(-y / ( betray(ROWS) )){
	x += 75;
	ROWS
}
}
}
}
def destroy(Ygritte,Hodor){
	Stark /= bar(-26,mislead(ROWS),TABLE[ROWS + ( -ROWS )][Sansa])
}
def mislead(Sansa,Arya,Ygritte){
	betray();
	Hodor /= COLS;
	Arya
}
def foo(Hodor,Arya){
	if(Stark){

};
	if(40){

} else {
	if(-1){
	Stark -= -51
}
}
}
def TABLE[-destroy(Ygritte,rule(-62,( 74 / --( TABLE[Ygritte][( COLS )] ) ) * ROWS,--TABLE[bar()][foo(ROWS)] - ( TABLE[foo(ROWS - -0.42 - TABLE[COLS][-58] + zed,mislead(---( --y ),( -mislead(-0.7 - ( Sansa ),TABLE[( ( COLS ) )][0.29]) * TABLE[0.39][Sansa] )))][TABLE[-TABLE[Stark][TABLE[--Stark][TABLE[Arya][ROWS]]]][( COLS )]] )) * foo(-( bar(TABLE[mislead(-0.67)][Hodor - ( ( foo(ROWS) ) )] + Arya,foo(-( 1 )),ROWS) )))][i] {
	--23;
	y /= 0.1
}
var y = 84
assert -( ( COLS - COLS ) ) + TABLE[TABLE[Ygritte][0.67]][0.05] : "Operation succesful"
def foo(zed,y,Hodor){
	x += ROWS;
	if(( ( ( ( TABLE[rule(-0.54 / foo(-Hodor,Hodor + betray(-bar(0.97,rule(-0.2)) - TABLE[( foo(COLS,bar(( Arya ),--protect(zed)) * rule(0.75 * zed,( Ygritte ))) )][0.23],dog)))][( betray(ROWS,-0.57,( x )) )] * ed ) / protect(( COLS ) * ( ( Stark ) )) ) ) )){
	if(mislead()){
	if(0.92 - zed){
	Sansa /= ( -0.19 ) / -890.0547
} else {
	if(Sansa){
	( mislead(foo(),y - foo(foo(rule(ROWS,( 0.33 ),COLS)) - 0.94,( ( 27 ) ),-0.27)) );
	if(( -790.34 * bar(0.62 + ROWS,Hodor) )){
	Hodor += Stark;
	if(dog){
	if(-0.12){
	if(zed){
	-ROWS
}
} else {
	if(( COLS )){
	if(-Sansa){

}
};
	COLS
};
	if(( --100 )){
	if(-0.81){
	if(-Hodor){
	x /= ROWS
}
}
}
};
	if(( COLS + TABLE[( 730.284 ) / TABLE[rule(-TABLE[TABLE[COLS][( rule(mislead(Arya / --0.17) * ( Arya )) )]][mislead(ROWS,( Arya ))])][protect(Ygritte - bar(-( -destroy(-( ROWS ),Stark) ),( Arya ),destroy(zed)))]][COLS] )){

}
}
};
	if(700.8){
	( bar() )
} else {
	Arya;
	raze% /= zed
}
};
	if(protect()){
	TABLE[-22][--12];
	if(-Hodor * y * -0.59){

};
	if(( COLS )){
	if(29){
	Sansa *= -( -y );
	-0.68;
	x -= -betray(Stark)
};
	bar()
}
}
} else {
	ROWS;
	Arya
};
	if(dog){
	zed -= ( ( -ROWS ) + -y / ( 1 ) );
	Ygritte += --mislead(-0.84,( 1 )) / COLS * TABLE[Stark][raze$()] / -0.18
} else {
	Stark;
	dog /= 0.86
}
} else {
	Arya /= y
}
}
